<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coding-man&#39;s blog</title>
    <link>https://coding-man.github.io/blog/</link>
    <description>Recent content on coding-man&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 15 Oct 2019 13:59:09 +0800</lastBuildDate>
    
	<atom:link href="https://coding-man.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://coding-man.github.io/blog/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://coding-man.github.io/blog/about/</guid>
      <description>Hugo is a static site engine written in Go.
It makes use of a variety of open source projects including:
 Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>CRLF</title>
      <link>https://coding-man.github.io/blog/post/crlf/</link>
      <pubDate>Tue, 15 Oct 2019 13:59:09 +0800</pubDate>
      
      <guid>https://coding-man.github.io/blog/post/crlf/</guid>
      <description>回车符（CR）和换行符（LF）是文本文件用于标记换行的控制字符（control characters）或字节码（bytecode）。 CR = Carriage Re</description>
    </item>
    
    <item>
      <title>go语言三个点的用法</title>
      <link>https://coding-man.github.io/blog/post/ellipsis/</link>
      <pubDate>Sun, 29 Sep 2019 14:04:36 +0800</pubDate>
      
      <guid>https://coding-man.github.io/blog/post/ellipsis/</guid>
      <description>在Golang中，三个点一共会用在四个地方. 变长的函数参数 如果最后一个函数参数的类型的是&amp;hellip;T，那么在调用这个函数的时候，我们可</description>
    </item>
    
    <item>
      <title>Hugo quick start</title>
      <link>https://coding-man.github.io/blog/post/quick-start/</link>
      <pubDate>Tue, 17 Sep 2019 16:54:39 +0800</pubDate>
      
      <guid>https://coding-man.github.io/blog/post/quick-start/</guid>
      <description>This quick start uses macOS in the examples. For instructions about how to install Hugo on other operating systems, see install. It is recommended to have Git installed to run this tutorial.
 Step 1: Install Hugo  Homebrew, a package manager for macOS, can be installed from brew.sh. See install if you are running Windows etc.
 1  brew install hugo   To verify your new install:</description>
    </item>
    
  </channel>
</rss>